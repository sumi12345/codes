<?php
/**
 * Created by PhpStorm.
 * User: sumi
 * Date: 18-12-9
 * Time: 下午9:38
 *
 * 某个森林有 N 棵树组成, 每棵数有一只松鼠居住.
 * 森林的边界上包含每棵树的最小凸多边形, 就好像用一条巨大的橡皮筋套在森林外围.
 * 有些树位于森林的边界, 就是说它们在多边形的角上或边上.
 * 每一只松鼠爬到树上, 记录下, 如果要让它们的树在边界上, 至少需要砍伐多少树. 确定写在日志上的数字列表.x
 *
 * 思路:
 * 如果森林中只有一棵树. 那就没有必要砍树了. 答案是 0.
 * 否则的话, 想象我们已经砍掉了一些树, 让 P 在边界上. 如果我们从 P 开始, 顺时针走, 会遇到另一个边界点 Q.
 * 想象我们站在 P 点, 看向 PQ 组成的边界线, 线的左边应该没有树.
 * 所以一个方法是, 对于每一棵数 Q, 看多少树在 PQ 线的左边, 最少的就是答案.
 * 但是我们还有方法改进算法的效率.
 * 对每一个可能的 Q, 维持一个数组 S, 按照 PQ 的角度排序, 遍历数组 S, PQ 就像逆时针走一圈.
 * 这个方法的好处是, 对于任何一个 Q, 任何在 PQ 左侧的点都会在 Q 之后出现.
 * 所以我们可以计算一个窗口, 尾指针指向 Q, 头指针指向在 PQ 左边的最后一个点, 记为点 R.
 * 要为下一个 Q 更新窗口, 我们需要做 2 件事情. 尾指针移到 Q, 然后移动头指针找到下一个在 PQ 左侧的点.
 * 有几点需要注意:
 * 头指针会比尾指针更早到达数组的末尾, 这时头指针需要从数组的头部开始.
 * PQ 的左侧可能没有点. 这时可以让头指针等于尾指针.
 * 在某个角度 P 上可能有多个点. 这几个点在 S 种是连续出现的. 但者不影响执行, 不需要额外处理.
 */